# Generated by Django 4.2 on 2025-04-28 17:57

import apps.events.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=255, verbose_name='Title')),
                ('start_datetime', models.DateTimeField(verbose_name='Start Time')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('location', models.CharField(blank=True, max_length=255, verbose_name='Location')),
                ('link', models.URLField(blank=True, null=True, verbose_name='Event Link')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10, verbose_name='Priority')),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.events.models.upload_to, validators=[apps.events.models.validate_image_type, apps.events.models.validate_image_size], verbose_name='Image')),
                ('is_recurring', models.BooleanField(default=False, verbose_name='Is Recurring')),
                ('assigned_to', models.ManyToManyField(blank=True, related_name='assigned_events', to=settings.AUTH_USER_MODEL, verbose_name='Assigned To')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_events', to=settings.AUTH_USER_MODEL, verbose_name='Created By')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': 'Event',
                'verbose_name_plural': 'Events',
                'ordering': ['-start_datetime'],
            },
        ),
        migrations.CreateModel(
            name='RecurringEvent',
            fields=[
                ('pkid', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('recurrence_rule', models.CharField(choices=[('d', 'Daily'), ('w', 'Weekly'), ('m', 'Monthly'), ('y', 'Yearly')], default='w', max_length=10, verbose_name='Recurrence Rule')),
                ('recurrence_end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='End time')),
                ('next_occurrence', models.DateTimeField(blank=True, null=True, verbose_name='Next Occurrence')),
                ('last_occurrence', models.DateTimeField(blank=True, null=True, verbose_name='Last Occurrence')),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='recurring_event', to='events.event', verbose_name='Recurring Event')),
            ],
            options={
                'verbose_name': 'Recurring Event',
                'verbose_name_plural': 'Recurring Events',
            },
        ),
    ]
